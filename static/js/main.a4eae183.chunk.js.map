{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","startIndex","setStartIndex","useEffect","container","document","querySelector","containerList","style","width","transition","transform","moveImage","value","newIndex","length","className","map","image","index","src","type","onClick","disabled","App","state","handleInputChange","event","target","name","checked","setState","prevState","partialState","Number","this","htmlFor","onChange","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a4eae183.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\nimport CarouselProps from '../types';\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [startIndex, setStartIndex] = useState(0);\n\n  useEffect(() => {\n    const container = document.querySelector('.Carousel') as HTMLElement;\n    const containerList\n      = document.querySelector('.Carousel__list') as HTMLElement;\n\n    if (container) {\n      container.style.width = `${(itemWidth + 50) * frameSize}px`;\n      containerList.style.transition = `transform ${animationDuration}ms ease-in-out`;\n      containerList.style.transform = `translateX(${-startIndex * (itemWidth + 50)}px)`;\n    }\n  }, [startIndex, animationDuration, itemWidth, frameSize]);\n\n  const moveImage = (value: number) => {\n    let newIndex = startIndex + value;\n\n    if (infinite) {\n      newIndex = (newIndex + images.length) % images.length;\n    }\n\n    if (newIndex <= 0) {\n      newIndex = 0;\n    }\n\n    if (newIndex >= images.length - frameSize) {\n      newIndex = images.length - frameSize;\n    }\n\n    setStartIndex(newIndex);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" data-cy=\"carousel-list\">\n        {images.map((image: string, index: number) => (\n          <li key={index}>\n            <img src={image} width={itemWidth} />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={() => moveImage(-step)}\n        disabled={startIndex === 0}\n        data-cy=\"prev-button\"\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => moveImage(step)}\n        disabled={startIndex + frameSize > images.length}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport CarouselProps from './types';\n\nclass App extends React.Component<{}, CarouselProps> {\n  state: CarouselProps = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n    } = event.target;\n\n    this.setState((prevState) => {\n      const partialState: Partial<CarouselProps> = {\n        [name]: type === 'checkbox' ? checked : Number(value),\n      };\n\n      if (name === 'images' && prevState.images) {\n        partialState.images = prevState.images;\n      }\n\n      return { ...prevState, ...partialState };\n    });\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"App__controls\">\n          <label\n            className=\"label\"\n            htmlFor=\"itemId\"\n          >\n            Item Width:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n          <label\n            className=\"label\"\n            htmlFor=\"frameId\"\n          >\n            Frame Size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n          <label\n            className=\"label\"\n            htmlFor=\"stepId\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n          <label className=\"label\">\n            Animation Duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n          <label className=\"label\">\n            Infinite:\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}